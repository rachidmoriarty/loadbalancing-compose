#!/bin/bash

set -eo pipefail

export ETCD_PORT=${ETCD_PORT:-4001}
export HOST_IP=${HOST_IP:-172.17.8.101}
export ETCD=$HOST_IP:$ETCD_PORT
export NGINX_BACKEND_SERVICE=${NGINX_BACKEND_SERVICE:-apache}
export NGINX_DEMO_DOMAIN=${NGINX_DEMO_DOMAIN:-example.com}
export NGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-$((`nproc`*2))}

echo "[nginx] createing config for service: $NGINX_BACKEND_SERVICE"
sed "s/<%service%>/$NGINX_BACKEND_SERVICE/g" /etc/confd/init/nginx.tmpl > /etc/confd/templates/nginx.tmpl
sed -i "s/<%demo_domain%>/$NGINX_DEMO_DOMAIN/g" /etc/confd/templates/nginx.tmpl
sed "s/<%service%>/$NGINX_BACKEND_SERVICE/g" /etc/confd/init/nginx.toml > /etc/confd/conf.d/nginx.toml
sed "s/<%worker_processes%>/$NGINX_WORKER_PROCESSES/g" /etc/nginx/nginx.conf.original > /etc/nginx/nginx.conf

echo "[nginx] booting container. ETCD: $ETCD."
# Try to make initial configuration every 5 seconds until successful
until confd -onetime -node $ETCD -config-file /etc/confd/conf.d/nginx.toml; do
    echo "[nginx] waiting for confd to create initial nginx configuration."
    sleep 5
done
# Put a continual polling `confd` process into the background to watch
# for changes every 10 seconds
confd -interval 10 -node $ETCD  -config-file /etc/confd/conf.d/nginx.toml &
echo "[nginx] confd is now monitoring etcd for changes..."

# Start the Nginx service using the generated config
echo "[nginx] starting nginx service..."
service nginx start

# Follow the logs to allow the script to continue running
tail -f /var/log/nginx/*.log
